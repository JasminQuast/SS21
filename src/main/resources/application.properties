spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

# Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Exceptions
server.error.include-message=always

# Templates
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

#Okta Properties
okta.oauth2.issuer=https://dev-21875901.okta.com/oauth2/default
okta.oauth2.client-id=${OKTA_CLIENT_ID}
okta.oauth2.client-secret=${OKTA_CLIENT_SECRET}

#More connections
spring.datasource.hikari.maximum-pool-size=5

#okta.oauth2.redirect-uri=/authorization-code/callback
#spring.security.oauth2.client.provider.okta.issuer-uri=https://dev-21875901.okta.com/oauth2/default
#spring.security.oauth2.client.registration.okta.client-id=${OKTA_CLIENT_ID}
#spring.security.oauth2.client.registration.okta.client-secret=${OKTA_CLIENT_SECRET}

#okta.oauth2.redirect-uri=http://localhost:8080/login/oauth2/code/okta

